<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="post">
  <insert id="writeReview" parameterType="pvo">
  	insert into post values(post_seq.nextVal,#{post_title},#{post_author},sysdate,0,#{post_concert},
  	'review',#{post_seat},#{post_sightsound},#{post_facility},#{post_perform},null,#{post_concertdate},null)
  </insert>
  <select id="reviewList" parameterType="map" resultType="pvo">
  	select p.post_num, p.post_title, p.post_author, m.mem_name authorname, p.post_date, p.post_hit 
  	from post p, member m where p.post_author=m.mem_num and p.post_concert=#{con_num} and p.post_type='review' 
  		<if test="post_title != null">
  			and p.post_title like '%'||#{post_title}||'%'
  		</if>
  		<if test="authorname != null">
	  		and m.mem_name like '%'||#{authorname}||'%'
  		</if>
  		<if test="reviewcont != null">
	  		and p.post_sightsound like '%'||#{reviewcont}||'%' 
	  		or p.post_facility like '%'||#{reviewcont}||'%' 
	  		or p.post_perform like '%'||#{reviewcont}||'%' 
  		</if>
  	order by p.post_num desc
  </select>
  <select id="readReview" parameterType="int" resultType="pvo">
  	select p.post_num, p.post_title, p.post_author, m.mem_name authorname, p.post_date, p.post_hit, c.con_poster concertposter, 
  	c.con_name concertname, ch.chall_name venuename, to_char(p.post_concertdate,'yyyy-mm-dd') post_concertdate, 
  	p.post_seat, p.post_sightsound, p.post_facility, p.post_perform, p.post_concert from post p, member m, concert c, concerthall ch 
  	where p.post_num=#{post_num} and m.mem_num=p.post_author and c.con_num=p.post_concert and c.con_venue=ch.chall_num
  </select>
  <select id="myReviews" parameterType="int" resultType="pvo">
  	select post_num, post_concert, con_name concertname, post_title, to_char(post_date,'yyyy-mm-dd') post_date from post, concert 
  	where post_author=#{mem_num} and post_concert=con_num and post_type='review' order by post_num desc
  </select>
  <select id="concerthallReviews" parameterType="int" resultType="pvo">
  	select post_num, post_author, mem_name authorname, to_char(post_date,'yyyy-mm-dd') post_date, post_concert, 
  	post_seat, post_sightsound, post_facility, con_name concertname from post, member, concert 
  	where post_concert=con_num and post_author=mem_num and con_venue=#{chall_num} and post_type='review' order by post_date desc
  </select>
  <delete id="deleteReview" parameterType="int">
  	delete from post where post_num=#{post_num}
  </delete>
  <insert id="writeLetsgo" parameterType="pvo">
  	insert into post values(post_seq.nextVal,#{post_title},#{post_author},sysdate,0,#{post_concert},
  	'with',null,null,null,null,#{post_cont},null,#{post_subtype})
  </insert>
  <select id="letsgoList" parameterType="int" resultType="pvo">
  	select post_num, post_title, post_author, mem_name authorname, post_date, post_hit, post_concert,
  	post_cont, post_subtype from post, member where post_author=mem_num 
  	and post_type='with' and post_concert=#{post_concert} order by post_date desc
  </select>
  <select id="readLetsgo" parameterType="int" resultType="pvo">
  	select post_num, post_title, post_author, mem_name authorname, post_date, post_hit, 
  	post_concert, post_cont, post_subtype from post, member where post_num=#{post_num} and mem_num=post_author
  </select>
  <update id="increaseHit" parameterType="pvo">
  	update post set post_hit=(select post_hit from post where post_num=#{post_num})+1 
  	where post_num=#{post_num} and post_author!=#{post_author}
  </update>
  </mapper>